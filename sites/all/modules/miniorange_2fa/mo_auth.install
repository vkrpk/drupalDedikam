<?php
/**
 * @file
 * Installation file for miniOrange Two-Factor Module.
 */

/**
 * Implements hook_install().
 */
function mo_auth_install() {
  $field_bases = array();
  $field_bases['miniorange_registered_email'] = array(
    'field_name' => 'miniorange_registered_email',
    'settings' => array('max_length' => 255),
    'type' => 'text',
  );

  $field_bases['configured_auth_methods'] = array(
    'field_name' => 'configured_auth_methods',
    'cardinality' => FIELD_CARDINALITY_UNLIMITED,
    'settings' => array(
      'allowed_values' => array(
        'OUT OF BAND EMAIL' => 'OUT OF BAND EMAIL',
        'MOBILE AUTHENTICATION' => 'MOBILE AUTHENTICATION',
        'GOOGLE AUTHENTICATOR' => 'GOOGLE AUTHENTICATOR',
	'SOFT TOKEN' => 'SOFT TOKEN',
	'PUSH NOTIFICATIONS' => 'PUSH NOTIFICATIONS',
	'SMS' => 'SMS',
	'SMS AND EMAIL' => 'SMS AND EMAIL'
      ),
    ),
    'type' => 'list_text',
  );

  foreach($field_bases as $field) {
    field_create_field($field);
  }

  $field_instances['user-user-miniorange_registered_email'] = array(
    'bundle' => 'user',
    'entity_type' => 'user',
    'field_name' => 'miniorange_registered_email',
    'label' => 'miniOrange Registered Email',
  );

  $field_instances['user-user-configured_auth_methods'] = array(
    'bundle' => 'user',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'list',
        'settings' => array(),
        'type' => 'list_default',
        'weight' => 1,
      ),
    ),
    'entity_type' => 'user',
    'field_name' => 'configured_auth_methods',
    'label' => 'Configured Auth Methods',
  );

  foreach($field_instances as $instance) {
    field_create_instance($instance);
  }
}

function mo_auth_update_7101() {

}

/**
 * Implements hook_uninstall().
 */
function mo_auth_uninstall() {
  variable_del('mo_auth_status');
  variable_del('mo_auth_customer_admin_email');
  variable_del('mo_auth_customer_admin_phone');
  variable_del('mo_auth_customer_admin_token');
  variable_del('mo_auth_customer_token_key');
  variable_del('mo_auth_customer_id');
  variable_del('mo_auth_customer_api_key');
  variable_del('mo_auth_customer_app_secret');
  variable_del('mo_auth_tx_id');
  variable_del('mo_auth_enable_two_factor');
  variable_del('mo_auth_enforce_inline_registration');
  variable_del('mo_auth_2fa_license_type');
  variable_del('mo_auth_2fa_license_plan');
  variable_del('mo_auth_2fa_license_no_of_users');

  $field_instances = array();

  // Exported field_instance: 'user-user-field_miniorange_email'.
  $field_instances['user-user-miniorange_registered_email'] = array(
    'bundle' => 'user',
    'entity_type' => 'user',
    'field_name' => 'miniorange_registered_email',
    'label' => 'miniOrange Registered Email',
  );

  $field_instances['user-user-configured_auth_methods'] = array(
    'bundle' => 'user',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'list',
        'settings' => array(),
        'type' => 'list_default',
        'weight' => 1,
      ),
    ),
    'entity_type' => 'user',
    'field_name' => 'configured_auth_methods',
    'label' => 'Configured Auth Methods',
  );

  foreach ($field_instances as $instance) {
    field_delete_instance($instance);
    field_delete_field($instance['field_name']);
  }
}